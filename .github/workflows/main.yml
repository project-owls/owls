name: OWLS CI-CD

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Generate Environment Variables File
      run: |
        echo "DATABASE_URL = $DATABASE_URL" >> .env
        echo "KAKAO_CLIENT_ID = $KAKAO_CLIENT_ID" >> .env
        echo "KAKAO_CLIENT_SECRET = $KAKAO_CLIENT_SECRET" >> .env
        echo "KAKAO_CALLBACK_URL = $KAKAO_CALLBACK_URL" >> .env
        echo "GOOGLE_CLIENT_ID = $GOOGLE_CLIENT_ID" >> .env
        echo "GOOGLE_SECRET = $GOOGLE_SECRET" >> .env
        echo "GOOGLE_CALLBACK_URL = $GOOGLE_CALLBACK_URL" >> .env
        echo "ACCESS_TOKEN_SECRET = $ACCESS_TOKEN_SECRET" >> .env
        echo "REFRESH_TOKEN_SECRET = $REFRESH_TOKEN_SECRET" >> .env
        echo "AWS_REGION = $AWS_REGION" >> .env
        echo "BUCKET_NAME = $BUCKET_NAME" >> .env
        echo "AWS_ACCESSKEY = $AWS_ACCESSKEY" >> .env
        echo "AWS_SECRETKEY = $AWS_SECRETKEY" >> .env
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

        KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
        KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        KAKAO_CALLBACK_URL: ${{ secrets.KAKAO_CALLBACK_URL }} 

        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}  
        GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}  
        GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}  

        ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}  
        REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

        AWS_REGION: ${{ secrets.AWS_REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        AWS_ACCESSKEY: ${{ secrets.AWS_ACCESSKEY }}
        AWS_SECRETKEY: ${{ secrets.AWS_SECRETKEY }}


    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: ssh connect & production
      uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        script: |
          cd server
          docker login -u &{{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker stop $(docker ps -aq)
          docker system prune -a --volumes -f
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/{{ secrets.DOCKERHUB_IMAGE_NAME }}
          docker-compose up -d
          docker image prune -f
